import:
  - https://www.nextzen.org/carto/refill-style/11/refill-style.zip
  - https://www.nextzen.org/carto/refill-style/11/themes/color-blue.zip
  - https://www.nextzen.org/carto/refill-style/11/themes/label-0.zip
  - https://www.nextzen.org/carto/refill-style/11/themes/detail-0.zip

global:
  sdk_api_key: NaqqS33fTUmyQcvbuIUCKA

scene:
  background:
    color: global.offwhite_color

styles:
  dots-constant:
    base: polygons
    mix: [generative-random, shapes-circle]
    shaders:
      defines:
        # current strategy can get a bit janky at tile edges. TBD.
        #TANGRAM_WORLD_POSITION_WRAP: false
        CELL_SIZE: 100.0 #meters. should be well less than INTERNAL_WRAP_SIZE
        COLOR1: vec3(1.00,1.00,1.00)
      uniforms:
        STOPS_AND_COLORS: [
          0.75, 1.0, 1.0, 1.0,
          0.9, 0.3, 0.6, 0.3,
          0.95, 0.6, 0.3, 0.3,
          1.0, 0.0, 0.0, 0.0]
        NUM_STOPS: 4
      blocks:
        color: |
          vec2 minitile = v_world_position.xy/CELL_SIZE;
          minitile.x += 0.5 * step(1.0, mod(minitile.y, 2.0));
          vec2 minitile_num = floor(minitile);
          vec2 minitile_space = fract(minitile);

          float v = random(floor(minitile_num.xy));
          for (int i = 0; i < 16; i += 4) {
            if (v <= STOPS_AND_COLORS[i]) {
              color.rgb = vec3(STOPS_AND_COLORS[i+1], STOPS_AND_COLORS[i+2], STOPS_AND_COLORS[i+3]);
              break;
            }
          }

          color.rgb = mix(COLOR1, color.rgb, circle(fract(minitile_space.xy), 0.5));

layers:
  earth:
    draw:
      polygons:
        order: 0
        style: dots-constant

  water:
    lakes:
      draw:
        polygons:
          style: polygons

